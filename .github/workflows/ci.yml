name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: TypeScript Type Checking
        run: npm run type-check

      - name: Run tests
        run: npm run test

      - name: Run lint
        run: npm run lint

      - name: Security Vulnerability Scanning
        run: npm audit --audit-level=high

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verify Java Version
        run: java -version

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: "-X"

      - name: Performance Budget Tests (Lighthouse)
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: https://staging.andrewmorrison.dev/

  accessibility:
    needs: test-and-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Start the application
        run: npm run start &
        env:
          NODE_ENV: test

      - name: Run Pa11y CI for accessibility checks
        run: npx pa11y-ci

  e2e-tests:
    needs: accessibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v2
      
  bundle-size-monitoring:
    needs: e2e-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check bundle size
        run: npx size-limit

  coverage-report:
    needs: bundle-size-monitoring
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Jest tests with coverage
        run: npm run test -- --coverage

  caching-validation:
    needs: coverage-report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate caching strategy
        run: npm run check-caching

  api-contract-testing:
    needs: caching-validation
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Pact tests
        run: npm run pact

  environment-specific-tests:
    needs: api-contract-testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run environment-specific tests
        run: npm run test:staging

  deploy:
    needs: environment-specific-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Vercel
        run: vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
